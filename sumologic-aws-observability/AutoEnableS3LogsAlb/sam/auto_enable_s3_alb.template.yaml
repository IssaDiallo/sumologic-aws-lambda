AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: "Lambda Function for  auto enable s3 logs for Application load balancer."

Globals:
  Function:
    Timeout: 300
    MemorySize: 128

Mappings:
  Region2ELBAccountId:
    ap-east-1:
      AccountId: "754344448648"
    ap-northeast-1:
      AccountId: "582318560864"
    ap-northeast-2:
      AccountId: "600734575887"
    ap-northeast-3:
      AccountId: "383597477331"
    ap-south-1:
      AccountId: "718504428378"
    ap-southeast-1:
      AccountId: "114774131450"
    ap-southeast-2:
      AccountId: "783225319266"
    ca-central-1:
      AccountId: "985666609251"
    cn-north-1:
      AccountId: "638102146993"
    cn-northwest-1:
      AccountId: "037604701340"
    eu-central-1:
      AccountId: "054676820928"
    eu-north-1:
      AccountId: "897822967062"
    eu-west-1:
      AccountId: "156460612806"
    eu-west-2:
      AccountId: "652711504416"
    eu-west-3:
      AccountId: "009996457667"
    sa-east-1:
      AccountId: "507241528517"
    us-east-1:
      AccountId: "127311923021"
    us-east-2:
      AccountId: "033677994240"
    us-gov-east-1:
      AccountId: "190560391635"
    us-gov-west-1:
      AccountId: "048591011584"
    us-west-1:
      AccountId: "027434742980"
    us-west-2:
      AccountId: "797873946194"

  RegionMap:
    us-east-1:
      bucketname: appdevzipfiles-us-east-1
    us-east-2:
      bucketname: appdevzipfiles-us-east-2
    us-west-1:
      bucketname: appdevzipfiles-us-west-1
    us-west-2:
      bucketname: appdevzipfiles-us-west-2
    ap-south-1:
      bucketname: appdevzipfiles-ap-south-1
    ap-northeast-2:
      bucketname: appdevzipfiles-ap-northeast-2
    ap-southeast-1:
      bucketname: appdevzipfiles-ap-southeast-1
    ap-southeast-2:
      bucketname: appdevzipfiles-ap-southeast-2
    ap-northeast-1:
      bucketname: appdevzipfiles-ap-northeast-1
    ca-central-1:
      bucketname: appdevzipfiles-ca-central-1
    eu-central-1:
      bucketname: appdevzipfiles-eu-central-1
    eu-west-1:
      bucketname: appdevzipfiles-eu-west-1
    eu-west-2:
      bucketname: appdevzipfiles-eu-west-2
    eu-west-3:
      bucketname: appdevzipfiles-eu-west-3
    eu-north-1:
      bucketname: appdevzipfiles-eu-north-1s
    sa-east-1:
      bucketname: appdevzipfiles-sa-east-1

Parameters:
  AccountAlias:
    Type: String
    Description: "Provide an Alias for AWS account for identification in Sumo Logic Explorer View, metrics and logs. Please do not include special characters."
    AllowedPattern: "[a-zA-Z0-9]+"

  BucketName:
    Type: String
    Description: "Provide an Existing bucket name which has ALB logs."
    AllowedPattern: ".+"

  EnableS3LoggingALBResources:
    Type: String
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'Yes'
    Description: "Choose if you need to Enable s3 logging for your AWS Resources."

  FilterExpression:
    Type: String
    Default: ""
    Description: "Provide regular expression for matching aws resources. For eg;- 'InstanceType': 't1.micro.*?'|'name': 'Test.*?']|'stageName': 'prod.*?'|'FunctionName': 'Test.*?'|TableName.*?|'LoadBalancerName': 'Test.*?'|'DBClusterIdentifier': 'Test.*?'|'DBInstanceIdentifier': 'Test.*?'"

Conditions:
  enable_s3_logging: !Equals [!Ref EnableS3LoggingALBResources, 'Yes']

Resources:

  SumoLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName : !Join
        - ""
        - - !Sub "sumo-s3-enable-role-${AccountAlias}-"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split ["/", !Ref "AWS::StackId"]
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: AwsObservabilityLambdaExecutePolicies
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - tag:TagResources
                  - tag:UntagResources
                  - elasticloadbalancing:DescribeLoadBalancerAttributes
                  - elasticloadbalancing:DescribeLoadBalancers
                  - elasticloadbalancing:AddTags
                  - elasticloadbalancing:RemoveTags
                  - elasticloadbalancing:ModifyLoadBalancerAttributes
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - s3:GetBucketPolicy
                  - s3:PutBucketPolicy
                Resource: '*'

  AwsAlbS3LogsResourcesLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Join
        - ""
        - - !Sub "sumo-s3-enable-${AccountAlias}-"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split ["/", !Ref "AWS::StackId"]
      Code:
        S3Bucket: !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
        S3Key: !Sub "sumologic-aws-observability/SumoLogicAWSObservabilityHelper/SumoLogicAWSObservabilityHelper.zip"
      Handler: "awsresource.enable_s3_logs"
      Runtime: python3.7
      Role: !GetAtt SumoLambdaRole.Arn
      Description: "Lambda Function for auto enable s3 logs for Application load balancer."
      MemorySize: 128
      Timeout: 600
      Environment:
        Variables:
          BucketName: !Ref BucketName
          AccountID: !Ref "AWS::AccountId"
          Filter: !Ref FilterExpression
          BucketPrefix: !Sub "elasticloadbalancing"
          RegionAccountId: !FindInMap [Region2ELBAccountId, !Ref 'AWS::Region', AccountId]

  AutoEnableS3LogEventsInvokePermission:
    Type: AWS::Lambda::Permission
    Condition: enable_s3_logging
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref AwsAlbS3LogsResourcesLambda
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt AutoEnableS3LogEventsRuleTrigger.Arn

  AutoEnableS3LogEventsRuleTrigger:
    Type: 'AWS::Events::Rule'
    DependsOn: AwsAlbS3LogsResourcesLambda
    Condition: enable_s3_logging
    Properties:
      Description: Auto-Enable S3 logs ALB resources with Lambda from events
      EventPattern:
        source:
          - aws.elasticloadbalancing
        detail-type:
          - AWS API Call via CloudTrail
        detail:
          eventSource:
            - elasticloadbalancing.amazonaws.com
          eventName:
            - CreateLoadBalancer
      Name: !Join
        - ""
        - - !Sub "aws-obs-${AccountAlias}-alb-s3-"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split ["/", !Ref "AWS::StackId"]
      State: ENABLED
      Targets:
        - Arn: !GetAtt AwsAlbS3LogsResourcesLambda.Arn
          Id: Main

Outputs:

  AwsAlbS3LogsResourcesLambda:
    Description: "AwsAlbS3LogsResourcesLambda Function ARN"
    Value: !GetAtt AwsAlbS3LogsResourcesLambda.Arn
