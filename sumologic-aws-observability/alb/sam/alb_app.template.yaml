AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: "Template to setup the ALB app with AWS and Sumo Logic resources for AWS Observability Solution."

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: "Sumo Logic Access Configuration (Required)"
        Parameters:
          - SumoDeployment
          - SumoAccessID
          - SumoAccessKey
          - SumoOrganizationId
          - RemoveSumoResourcesOnDeleteStack

      - Label:
          default: "Sumo Logic AWS Explorer Configuration (Required)"
        Parameters:
          - AccountAlias

      - Label:
          default: "App Details - Collector Configuration"
        Parameters:
          - InstallApp
          - CollectorName

      - Label:
          default: "App Details - CloudWatch Metrics Source Configuration"
        Parameters:
          - CreateCloudWatchMetricsSource
          - CloudWatchMetricsSourceName
          - CloudWatchMetricsSourceCategoryName

      - Label:
          default: "App Details - ELB Source Log Source Configuration"
        Parameters:
          - CreateS3Bucket
          - S3LogsBucketName
          - CreateELBLogSource
          - S3BucketPathExpression
          - ELBLogsSourceName
          - ELBLogsSourceCategoryName

      - Label:
          default: "Filter Regular Expression for tagging resources."
          Parameters:
            - FilterExpression
            - AutoEnableS3LogsALBResources

      - Label:
          default: "Local Parameters. Do Not Edit the values."
        Parameters:
          - ParentStackName

    ParameterLabels:
      SumoDeployment:
        default: "Sumo Logic Deployment Name"
      SumoAccessID:
        default: "Sumo Logic Access ID"
      SumoAccessKey:
        default: "Sumo Logic Access Key"
      SumoOrganizationId:
        default: "Sumo Logic Organization Id"
      RemoveSumoResourcesOnDeleteStack:
        default: "Delete Sumo Logic Resources when stack is deleted"

      AccountAlias:
        default: "Alias for AWS Account Identification"

      InstallApp:
        default: "Install Sumo Logic App"
      CollectorName:
        default: "Collector Name"

      CreateS3Bucket:
        default: "Create AWS S3 Bucket"
      S3LogsBucketName:
        default: "AWS S3 Bucket Name"
      CreateELBLogSource:
        default: "Create Sumo Logic ELB Logs Source"
      S3BucketPathExpression:
        default: "Path Expression for the logs"
      ELBLogsSourceName:
        default: "Sumo Logic ELB Logs Source Name"
      ELBLogsSourceCategoryName:
        default: "Sumo Logic ELB Logs Source Category Name"

      CreateCloudWatchMetricsSource:
        default: "Create Sumo Logic CloudWatch Metrics Source"
      CloudWatchMetricsSourceName:
        default: "Sumo Logic CloudWatch Metrics Source Name"
      CloudWatchMetricsSourceCategoryName:
        default: "Sumo Logic CloudWatch Metrics Source Category Name"

      FilterExpression:
        default: "Filter Regular expression"
      AutoEnableS3LogsALBResources:
        default: "Auto Enable S3 Logging for existing ALB Resources"

      ParentStackName:
        default: "If Any, Name of parent Stack"

Parameters:
  SumoDeployment:
    Type: String
    AllowedValues:
      - au
      - ca
      - de
      - eu
      - jp
      - us2
      - us1
      - in
      - fed
    Description: "Enter au, ca, de, eu, jp, us2, in, fed or us1."
  SumoAccessID:
    Type: String
    Description: The Sumo Logic Access ID.
    AllowedPattern: ".+"
  SumoAccessKey:
    Type: String
    Description: The Sumo Logic Access Key.
    AllowedPattern: ".+"
    NoEcho: true
  SumoOrganizationId:
    Type: String
    Description: The Account Overview page displays information about your Sumo Logic organization.
    AllowedPattern: ".+"
  RemoveSumoResourcesOnDeleteStack:
    AllowedValues:
      - true
      - false
    Default: false
    Description: To delete collector, sources and app when stack is deleted, set this parameter to true. Default is true.
    Type: String

  AccountAlias:
    Type: String
    Description: "Provide an Alias for AWS account for identification in Sumo Logic Explorer View, metrics and logs. Please do not include special characters."
    AllowedPattern: "[a-zA-Z0-9]+"

  InstallApp:
    Type: String
    Description: Install Sumo Logic App. Select Yes for different source category.
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  CollectorName:
    Type: String
    Description: Change the collector name to be created else default name will be used.
    Default: AWS-Alb-Collector

  CreateS3Bucket:
    Type: String
    Description: "Yes - Create a new S3 bucket in AWS S3.\n
                  No - Use an existing S3 bucket from AWS S3 which has ALB Logs."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  S3LogsBucketName:
    Type: String
    Description: "Existing Bucket Name - Provide value if the Flag is set to No.\n
                  New Bucket Name - Provide a unique Bucket Name if the flag is set to Yes."
  CreateELBLogSource:
    Type: String
    Description: "Choose Yes to create Sumo Logic ELB Log Source with provided bucket Name."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  S3BucketPathExpression:
    Type: String
    Description: Path expression to match one or more S3 objects. For example, ABC*.log or ABC.log
    Default: "*"
  ELBLogsSourceName:
    Type: String
    Description: Change the ELB Source name to be created else default name will be used.
    Default: AWS-Alb-Log-Source
  ELBLogsSourceCategoryName:
    Type: String
    Description: "Existing - Change to an existing Source Category from Sumo Logic if ELB Source is not created.\n
                  New - Default will be used if ELB Source is Created"
    Default: AWS/Alb/S3/Logs

  CreateCloudWatchMetricsSource:
    Type: String
    Description: "Choose Yes to create Sumo Logic Cloud Watch Metrics Source."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  CloudWatchMetricsSourceName:
    Type: String
    Description: Change the CloudWatch Metrics Source name to be created else default name will be used.
    Default: AWS-Alb-CloudWatch-Metrics-Source
  CloudWatchMetricsSourceCategoryName:
    Type: String
    Description: "Existing - Change to an existing Source Category from Sumo Logic if CloudWatch Metrics Source is not created.\n
                  New - Default will be used if CloudWatch Metrics Source is Created"
    Default: AWS/Alb/CloudWatch/Metrics

  FilterExpression:
    Type: String
    Default: ""
    Description: "Provide regular expression for matching aws resources. For eg;- 'InstanceType': 't1.micro.*?'|'name': 'Test.*?']|'stageName': 'prod.*?'|'FunctionName': 'Test.*?'|TableName.*?|'LoadBalancerName': 'Test.*?'|'DBClusterIdentifier': 'Test.*?'|'DBInstanceIdentifier': 'Test.*?'"
  AutoEnableS3LogsALBResources:
    Type: String
    Description: "Yes -> To automatically enable S3 logging for existing created ALB resources."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'

  ParentStackName:
    Type: String
    Default: "ParentStackName"
    Description: Parent Stack Name. Do Not Edit the value.

Mappings:
  Region2ELBAccountId:
    ap-east-1:
      AccountId: "754344448648"
    ap-northeast-1:
      AccountId: "582318560864"
    ap-northeast-2:
      AccountId: "600734575887"
    ap-northeast-3:
      AccountId: "383597477331"
    ap-south-1:
      AccountId: "718504428378"
    ap-southeast-1:
      AccountId: "114774131450"
    ap-southeast-2:
      AccountId: "783225319266"
    ca-central-1:
      AccountId: "985666609251"
    cn-north-1:
      AccountId: "638102146993"
    cn-northwest-1:
      AccountId: "037604701340"
    eu-central-1:
      AccountId: "054676820928"
    eu-north-1:
      AccountId: "897822967062"
    eu-west-1:
      AccountId: "156460612806"
    eu-west-2:
      AccountId: "652711504416"
    eu-west-3:
      AccountId: "009996457667"
    sa-east-1:
      AccountId: "507241528517"
    us-east-1:
      AccountId: "127311923021"
    us-east-2:
      AccountId: "033677994240"
    us-gov-east-1:
      AccountId: "190560391635"
    us-gov-west-1:
      AccountId: "048591011584"
    us-west-1:
      AccountId: "027434742980"
    us-west-2:
      AccountId: "797873946194"

  RegionMap:
    us-east-1:
      bucketname: appdevzipfiles-us-east-1
    us-east-2:
      bucketname: appdevzipfiles-us-east-2
    us-west-1:
      bucketname: appdevzipfiles-us-west-1
    us-west-2:
      bucketname: appdevzipfiles-us-west-2
    ap-south-1:
      bucketname: appdevzipfiles-ap-south-1
    ap-northeast-2:
      bucketname: appdevzipfiles-ap-northeast-2
    ap-southeast-1:
      bucketname: appdevzipfiles-ap-southeast-1
    ap-southeast-2:
      bucketname: appdevzipfiles-ap-southeast-2
    ap-northeast-1:
      bucketname: appdevzipfiles-ap-northeast-1
    ca-central-1:
      bucketname: appdevzipfiles-ca-central-1
    eu-central-1:
      bucketname: appdevzipfiles-eu-central-1
    eu-west-1:
      bucketname: appdevzipfiles-eu-west-1
    eu-west-2:
      bucketname: appdevzipfiles-eu-west-2
    eu-west-3:
      bucketname: appdevzipfiles-eu-west-3
    eu-north-1:
      bucketname: appdevzipfiles-eu-north-1s
    sa-east-1:
      bucketname: appdevzipfiles-sa-east-1

Conditions:
  do_not_use_parent_stack: !Equals [ !Ref ParentStackName, "ParentStackName"]

  install_app: !Equals [!Ref InstallApp, 'Yes']
  create_target_s3_bucket: !Equals [!Ref CreateS3Bucket, 'Yes']
  install_elb_logs_source: !Equals [!Ref CreateELBLogSource, 'Yes']
  install_cloud_watch_metric_source: !Equals [!Ref CreateCloudWatchMetricsSource, 'Yes']
  auto_enable_s3_logs: !Equals [ !Ref AutoEnableS3LogsALBResources, 'Yes' ]
  install_collector: !Or
    - !Condition install_elb_logs_source
    - !Condition install_cloud_watch_metric_source

Resources:
  SumoLogicHelperRole:
    Type: AWS::IAM::Role
    Condition: do_not_use_parent_stack
    Properties:
      RoleName : !Join
        - ""
        - - !Sub "sumo-lambda-role-${AccountAlias}-"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split ["/", !Ref "AWS::StackId"]
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: AwsObservabilityLambdaExecutePolicies
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - tag:TagResources
                  - tag:UntagResources
                  - elasticloadbalancing:DescribeLoadBalancerAttributes
                  - elasticloadbalancing:DescribeLoadBalancers
                  - elasticloadbalancing:AddTags
                  - elasticloadbalancing:RemoveTags
                  - elasticloadbalancing:ModifyLoadBalancerAttributes
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - s3:GetBucketPolicy
                  - s3:PutBucketPolicy
                Resource: '*'

  SumoLogicHelperFunction:
    Type: 'AWS::Serverless::Function'
    DependsOn: SumoLogicHelperRole
    Condition: do_not_use_parent_stack
    Properties:
      FunctionName: !Join
        - ""
        - - !Sub "sumo-lambda-${AccountAlias}-"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split ["/", !Ref "AWS::StackId"]
      Handler: main.handler
      Runtime: python3.7
      CodeUri:
        Bucket: !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
        Key: !Sub "sumologic-aws-observability/SumoLogicAWSObservabilityHelper/SumoLogicAWSObservabilityHelper.zip"
      MemorySize: 128
      Timeout: 900
      Role:
        Fn::GetAtt:
          - SumoLogicHelperRole
          - Arn

  SumoRole:
    Type: AWS::IAM::Role
    Condition: do_not_use_parent_stack
    Properties:
      RoleName : !Join
        - ""
        - - !Sub "sumo-source-role-${AccountAlias}-"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split ["/", !Ref "AWS::StackId"]
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: arn:aws:iam::926226587429:root
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Sub "${SumoDeployment}:${SumoOrganizationId}"
      Path: "/"
      Policies:
        - PolicyName: SumoLogicAwsSourcesPolicies
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:ListBucketVersions
                  - s3:ListBucket
                  - tag:GetResources
                  - cloudwatch:ListMetrics
                  - cloudwatch:GetMetricStatistics
                Resource:
                  "*"

  TagAWSResources:
    Type: Custom::TagAWSResources
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoLogicHelperFunctionARN'
      RemoveOnDeleteStack: !Ref RemoveSumoResourcesOnDeleteStack
      Region: !Ref "AWS::Region"
      AWSResource: elbv2
      Tags:
        account: !Ref AccountAlias
      AccountID: !Ref "AWS::AccountId"
      Filter: !Ref FilterExpression

  EnableS3LogsResources:
    Type: Custom::EnableS3LogsResources
    Condition: auto_enable_s3_logs
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoLogicHelperFunctionARN'
      RemoveOnDeleteStack: !Ref RemoveSumoResourcesOnDeleteStack
      AWSResource: elbv2
      BucketName: !Ref S3LogsBucketName
      Filter: !Ref FilterExpression
      BucketPrefix: !Sub "elasticloadbalancing"
      RegionAccountId: !FindInMap [Region2ELBAccountId, !Ref 'AWS::Region', AccountId]

  CreateSumoLogicAWSExplorerView:
    Type: Custom::SumoLogicAWSExplorer
    Condition: do_not_use_parent_stack
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoLogicHelperFunctionARN'
      RemoveOnDeleteStack: false
      ExplorerName: "AWS Observability"
      MetadataKeys:
        - "account"
        - "region"
        - "namespace"
        - "entity"
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment

  ALBMetricRule:
    Type: Custom::SumoLogicMetricRules
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoLogicHelperFunctionARN'
      RemoveOnDeleteStack: false
      MetricRuleName: "AwsObservabilityALBMetricsEntityRule"
      MatchExpression: !Sub "Namespace=AWS/ApplicationELB LoadBalancer=*"
      ExtractVariables:
        entity: "$LoadBalancer._1"
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment

  SumoHostedCollector:
    Type: Custom::Collector
    Condition: install_collector
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      CollectorType: Hosted
      RemoveOnDeleteStack: !If [do_not_use_parent_stack, !Ref RemoveSumoResourcesOnDeleteStack, false]
      CollectorName: !Ref CollectorName
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment

  SumoCloudwatchMetricsSource:
    Condition: install_cloud_watch_metric_source
    Type: Custom::AWSSource
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      RemoveOnDeleteStack: !Ref RemoveSumoResourcesOnDeleteStack
      SourceType: AwsCloudWatch
      Namespaces:
        - 'AWS/ApplicationELB'
      SourceName: !Ref CloudWatchMetricsSourceName
      SourceCategory: !Ref CloudWatchMetricsSourceCategoryName
      CollectorId: !If
        - install_cloud_watch_metric_source
        - !GetAtt
          - SumoHostedCollector
          - COLLECTOR_ID
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-CollectorID'
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment
      RoleArn: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoRole
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoSourceRoleARN'

  sumoApp:
    Condition: install_app
    Type: Custom::App
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      AppName: "AWS Observability Alb App"
      RemoveOnDeleteStack: !Ref RemoveSumoResourcesOnDeleteStack
      AppSources:
        metricsrc: !Sub "_sourceCategory=${CloudWatchMetricsSourceCategoryName}"
        logsrc: !Sub "_sourceCategory=${ELBLogsSourceCategoryName}"
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment

  TargetS3Bucket:
    Condition: create_target_s3_bucket
    Type: AWS::S3::Bucket
    DependsOn:
      - SumoSNSpolicy
    Properties:
      BucketName: !Ref S3LogsBucketName
      NotificationConfiguration:
        TopicConfigurations:
          - Event: s3:ObjectCreated:Put
            Topic: !Ref SumoSNSTopic

  SumoS3BucketPolicy:
    Condition: create_target_s3_bucket
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3LogsBucketName
      PolicyDocument:
        Statement:
          - Sid: AWSAlbLogsPutObjects
            Effect: Allow
            Principal:
              AWS: !Join
              - ""
              - - "arn:aws:iam::"
                - !FindInMap [Region2ELBAccountId, !Ref 'AWS::Region', AccountId]
                - ":root"
            Action: s3:PutObject
            Resource:
              - !Sub "arn:aws:s3:::${S3LogsBucketName}/*"
    DependsOn:
      - TargetS3Bucket

  SumoSNSTopic:
    Condition: install_elb_logs_source
    Type: "AWS::SNS::Topic"
    Properties:
      TopicName: !Join
        - ""
        - - !Sub "sumo-sns-topic-${AccountAlias}-"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split ["/", !Ref "AWS::StackId"]

  SumoSNSSubscription:
    Condition: install_elb_logs_source
    Type: "AWS::SNS::Subscription"
    Properties:
      TopicArn:
        Ref: SumoSNSTopic
      Endpoint: !GetAtt SumoELBSource.SUMO_ENDPOINT
      Protocol: https
      DeliveryPolicy:
        healthyRetryPolicy:
          numRetries: 40
          minDelayTarget: 10
          maxDelayTarget: 300
          numMinDelayRetries: 3
          numMaxDelayRetries: 5
          numNoDelayRetries: 0
          backoffFunction: exponential

  SumoSNSpolicy:
    Condition: install_elb_logs_source
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      PolicyDocument:
        Id: SumoTopicPolicy
        Statement:
          - Action:
              - sns:Publish
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
              ArnLike:
                aws:SourceArn: !Sub "arn:aws:s3:::${S3LogsBucketName}"
            Effect: Allow
            Principal:
              AWS: "*"
            Resource:
              - !Ref SumoSNSTopic
      Topics:
        - Ref: SumoSNSTopic

  WaitHandle:
    Type: "AWS::CloudFormation::WaitConditionHandle"

  TargetS3BucketWaitHandle:
    Condition: create_target_s3_bucket
    DependsOn: TargetS3Bucket
    Type: "AWS::CloudFormation::WaitConditionHandle"

  TargetS3BucketWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !If [create_target_s3_bucket, !Ref TargetS3BucketWaitHandle, !Ref WaitHandle]
      Timeout: "1"
      Count: 0

  SumoELBSource:
    Condition: install_elb_logs_source
    DependsOn: TargetS3BucketWaitCondition
    Type: Custom::AWSSource
    Properties:
      SourceType: AwsElbBucket
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      SourceName: !Ref ELBLogsSourceName
      RemoveOnDeleteStack: !Ref RemoveSumoResourcesOnDeleteStack
      SourceCategory: !Ref ELBLogsSourceCategoryName
      CollectorId: !GetAtt SumoHostedCollector.COLLECTOR_ID
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment
      TargetBucketName: !Ref S3LogsBucketName
      PathExpression: !Ref S3BucketPathExpression
      Fields:
        account: !Ref AccountAlias
        namespace: "aws/applicationelb"
        region: !Ref "AWS::Region"
      RoleArn: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoRole
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoSourceRoleARN'