AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: "Template to setup the Lambda app with AWS and Sumo Logic resources for AWS Observability Solution."

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: "Sumo Logic Access Configuration (Required)"
        Parameters:
          - SumoDeployment
          - SumoAccessID
          - SumoAccessKey
          - SumoOrganizationId
          - RemoveSumoResourcesOnDeleteStack

      - Label:
          default: "Sumo Logic AWS Explorer Configuration (Required)"
        Parameters:
          - AccountAlias

      - Label:
          default: "App Details - Collector Configuration"
        Parameters:
          - InstallApp
          - CollectorName

      - Label:
          default: "App Details - CloudWatch Metrics Source Configuration"
        Parameters:
          - CreateCloudWatchMetricsSource
          - CloudWatchMetricsSourceName
          - CloudWatchMetricsSourceCategoryName

      - Label:
          default: "App Details - CloudTrail Log Source Configuration"
        Parameters:
          - CreateCloudTrailBucket
          - CloudTrailLogsBucketName
          - CreateCloudTrailLogSource
          - CloudTrailBucketPathExpression
          - CloudTrailLogsSourceName
          - CloudTrailLogsSourceCategoryName

      - Label:
          default: "App Details - CloudWatch Log Source Configuration"
        Parameters:
          - CreateCloudWatchLogSource
          - CloudWatchLogsSourceName
          - CloudWatchLogsSourceCategoryName

      - Label:
          default: "Filter Regular Expression for tagging resources."
          Parameters:
            - FilterExpression

      - Label:
          default: "Local Parameters. Do Not Edit the values."
        Parameters:
          - ParentStackName

    ParameterLabels:
      SumoDeployment:
        default: "Sumo Logic Deployment Name"
      SumoAccessID:
        default: "Sumo Logic Access ID"
      SumoAccessKey:
        default: "Sumo Logic Access Key"
      SumoOrganizationId:
        default: "Sumo Logic Organization Id"
      RemoveSumoResourcesOnDeleteStack:
        default: "Delete Sumo Logic Resources when stack is deleted"

      AccountAlias:
        default: "Alias for AWS Account Identification"

      InstallApp:
        default: "Install Sumo Logic App"
      CollectorName:
        default: "Collector Name"

      CreateCloudTrailBucket:
        default: "Create AWS S3 Bucket"
      CloudTrailLogsBucketName:
        default: "AWS S3 Bucket Name"
      CreateCloudTrailLogSource:
        default: "Create Sumo Logic CloudTrail Logs Source"
      CloudTrailBucketPathExpression:
        default: "Path Expression for the logs"
      CloudTrailLogsSourceName:
        default: "Sumo Logic CloudTrail Logs Source Name"
      CloudTrailLogsSourceCategoryName:
        default: "Sumo Logic CloudTrail Logs Source Category Name"

      CreateCloudWatchLogSource:
        default: "Create Sumo Logic CloudWatch Logs Source"
      CloudWatchLogsSourceName:
        default: "Sumo Logic CloudWatch Logs Source Name"
      CloudWatchLogsSourceCategoryName:
        default: "Sumo Logic CloudWatch Logs Source Category Name"

      CreateCloudWatchMetricsSource:
        default: "Create Sumo Logic CloudWatch Metrics Source"
      CloudWatchMetricsSourceName:
        default: "Sumo Logic CloudWatch Metrics Source Name"
      CloudWatchMetricsSourceCategoryName:
        default: "Sumo Logic CloudWatch Metrics Source Category Name"

      FilterExpression:
        default: "Filter Regular expression"

      ParentStackName:
        default: "If Any, Name of parent Stack"

Parameters:
  SumoDeployment:
    Type: String
    AllowedValues:
      - au
      - ca
      - de
      - eu
      - jp
      - us2
      - us1
      - in
      - fed
    Description: "Enter au, ca, de, eu, jp, us2, in, fed or us1."
  SumoAccessID:
    Type: String
    Description: The Sumo Logic Access ID.
    AllowedPattern: ".+"
  SumoAccessKey:
    Type: String
    Description: The Sumo Logic Access Key.
    AllowedPattern: ".+"
    NoEcho: true
  SumoOrganizationId:
    Type: String
    Description: The Account Overview page displays information about your Sumo Logic organization.
    AllowedPattern: ".+"
  RemoveSumoResourcesOnDeleteStack:
    AllowedValues:
      - true
      - false
    Default: false
    Description: To delete collector, sources and app when stack is deleted, set this parameter to true. Default is true.
    Type: String

  AccountAlias:
    Type: String
    Description: "Provide an Alias for AWS account for identification in Sumo Logic Explorer View, metrics and logs. Please do not include special characters."
    AllowedPattern: "[a-zA-Z0-9]+"

  InstallApp:
    Type: String
    Description: Install Sumo Logic App. Select Yes for different source category.
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  CollectorName:
    Type: String
    Description: Change the collector name to be created else default name will be used.
    Default: AWS-Lambda-Collector

  CreateCloudTrailBucket:
    Type: String
    Description: "Yes - Create a new CloudTrail bucket in AWS S3.\n
                  No - Use an existing CloudTrail bucket from AWS S3 which has CloudTrail Logs."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  CloudTrailLogsBucketName:
    Type: String
    Description: "Existing Bucket Name - Provide value if the Flag is set to No.\n
                  New Bucket Name - Provide a unique Bucket Name if the flag is set to Yes."
  CreateCloudTrailLogSource:
    Type: String
    Description: "Choose Yes to create Sumo Logic Cloud Trail Log Source with provided bucket Name."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  CloudTrailBucketPathExpression:
    Type: String
    Description: Path expression to match one or more S3 objects. For example, ABC*.log or ABC.log
    Default: "*"
  CloudTrailLogsSourceName:
    Type: String
    Description: Change the CloudTrail Source name to be created else default name will be used.
    Default: AWS-Lambda-CloudTrail-Log-Source
  CloudTrailLogsSourceCategoryName:
    Type: String
    Description: "Existing - Change to an existing Source Category from Sumo Logic if CloudTrail Source is not created.\n
                  New - Default will be used if CloudTrail Source is Created"
    Default: AWS/lambda/CloudTrail/Logs

  CreateCloudWatchLogSource:
    Type: String
    Description: "Choose Yes to create Sumo Logic Cloud Watch Log Source."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  CloudWatchLogsSourceName:
    Type: String
    Description: Change the CloudWatch Log Source name to be created else default name will be used.
    Default: AWS-Lambda-CloudWatch-Log-Source
  CloudWatchLogsSourceCategoryName:
    Type: String
    Description: "Existing - Change to an existing Source Category from Sumo Logic if CloudWatch Log Source is not created.\n
                  New - Default will be used if CloudWatch Log Source is Created"
    Default: AWS/lambda/CloudWatch/Logs

  CreateCloudWatchMetricsSource:
    Type: String
    Description: "Choose Yes to create Sumo Logic Cloud Watch Metrics Source."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  CloudWatchMetricsSourceName:
    Type: String
    Description: Change the CloudWatch Metrics Source name to be created else default name will be used.
    Default: AWS-Lambda-CloudWatch-Metrics-Source
  CloudWatchMetricsSourceCategoryName:
    Type: String
    Description: "Existing - Change to an existing Source Category from Sumo Logic if CloudWatch Metrics Source is not created.\n
                  New - Default will be used if CloudWatch Metrics Source is Created"
    Default: AWS/lambda/CloudWatch/Metrics

  FilterExpression:
    Type: String
    Default: ""
    Description: "Provide regular expression for matching aws resources. For eg;- 'InstanceType': 't1.micro.*?'|'name': 'Test.*?']|'stageName': 'prod.*?'|'FunctionName': 'Test.*?'|TableName.*?|'LoadBalancerName': 'Test.*?'|'DBClusterIdentifier': 'Test.*?'|'DBInstanceIdentifier': 'Test.*?'"

  ParentStackName:
    Type: String
    Default: "ParentStackName"
    Description: Parent Stack Name. Do Not Edit the value.

Mappings:
  RegionMap:
    us-east-1:
      bucketname: appdevzipfiles-us-east-1
    us-east-2:
      bucketname: appdevzipfiles-us-east-2
    us-west-1:
      bucketname: appdevzipfiles-us-west-1
    us-west-2:
      bucketname: appdevzipfiles-us-west-2
    ap-south-1:
      bucketname: appdevzipfiles-ap-south-1
    ap-northeast-2:
      bucketname: appdevzipfiles-ap-northeast-2
    ap-southeast-1:
      bucketname: appdevzipfiles-ap-southeast-1
    ap-southeast-2:
      bucketname: appdevzipfiles-ap-southeast-2
    ap-northeast-1:
      bucketname: appdevzipfiles-ap-northeast-1
    ca-central-1:
      bucketname: appdevzipfiles-ca-central-1
    eu-central-1:
      bucketname: appdevzipfiles-eu-central-1
    eu-west-1:
      bucketname: appdevzipfiles-eu-west-1
    eu-west-2:
      bucketname: appdevzipfiles-eu-west-2
    eu-west-3:
      bucketname: appdevzipfiles-eu-west-3
    eu-north-1:
      bucketname: appdevzipfiles-eu-north-1s
    sa-east-1:
      bucketname: appdevzipfiles-sa-east-1

Conditions:
  do_not_use_parent_stack: !Equals [ !Ref ParentStackName, "ParentStackName"]

  install_app: !Equals [!Ref InstallApp, 'Yes']
  create_target_s3_bucket: !Equals [!Ref CreateCloudTrailBucket, 'Yes']
  install_cloudtrail_logs_source: !Equals [!Ref CreateCloudTrailLogSource, 'Yes']
  install_cloud_watch_logs_source: !Equals [!Ref CreateCloudWatchLogSource, 'Yes']
  install_cloud_watch_metric_source: !Equals [!Ref CreateCloudWatchMetricsSource, 'Yes']
  install_collector: !Or
    - !Condition install_cloudtrail_logs_source
    - !Condition install_cloud_watch_logs_source
    - !Condition install_cloud_watch_metric_source

Resources:
  SumoLogicHelperRole:
    Type: AWS::IAM::Role
    Condition: do_not_use_parent_stack
    Properties:
      RoleName : !Join
        - ""
        - - !Sub "sumo-lambda-role-${AccountAlias}-"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split ["/", !Ref "AWS::StackId"]
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: AwsObservabilityLambdaExecutePolicies
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - cloudtrail:CreateTrail
                  - cloudtrail:DeleteTrail
                  - cloudtrail:UpdateTrail
                  - cloudtrail:StartLogging
                  - tag:TagResources
                  - tag:UntagResources
                  - lambda:ListFunctions
                  - lambda:TagResource
                  - lambda:UntagResource
                Resource: '*'

  SumoLogicHelperFunction:
    Type: 'AWS::Serverless::Function'
    DependsOn: SumoLogicHelperRole
    Condition: do_not_use_parent_stack
    Properties:
      FunctionName: !Join
        - ""
        - - !Sub "sumo-lambda-${AccountAlias}-"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split ["/", !Ref "AWS::StackId"]
      Handler: main.handler
      Runtime: python3.7
      CodeUri:
        Bucket: !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
        Key: !Sub "sumologic-aws-observability/SumoLogicAWSObservabilityHelper/SumoLogicAWSObservabilityHelper.zip"
      MemorySize: 128
      Timeout: 900
      Role:
        Fn::GetAtt:
          - SumoLogicHelperRole
          - Arn

  SumoRole:
    Type: AWS::IAM::Role
    Condition: do_not_use_parent_stack
    Properties:
      RoleName : !Join
        - ""
        - - !Sub "sumo-source-role-${AccountAlias}-"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split ["/", !Ref "AWS::StackId"]
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: arn:aws:iam::926226587429:root
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Sub "${SumoDeployment}:${SumoOrganizationId}"
      Path: "/"
      Policies:
        - PolicyName: SumoLogicAwsSourcesPolicies
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:ListBucketVersions
                  - s3:ListBucket
                  - tag:GetResources
                  - cloudwatch:ListMetrics
                  - cloudwatch:GetMetricStatistics
                Resource:
                  "*"

  TagAWSResources:
    Type: Custom::TagAWSResources
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoLogicHelperFunctionARN'
      RemoveOnDeleteStack: !Ref RemoveSumoResourcesOnDeleteStack
      Region: !Ref "AWS::Region"
      AWSResource: lambda
      Tags:
        account: !Ref AccountAlias
      AccountID: !Ref "AWS::AccountId"
      Filter: !Ref FilterExpression

  WaitHandle:
    Type: "AWS::CloudFormation::WaitConditionHandle"

  CreateSumoLogicAWSExplorerView:
    Type: Custom::SumoLogicAWSExplorer
    Condition: do_not_use_parent_stack
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoLogicHelperFunctionARN'
      RemoveOnDeleteStack: false
      ExplorerName: "AWS Observability"
      MetadataKeys:
        - "account"
        - "region"
        - "namespace"
        - "entity"
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment

  LambdaMetricWaitHandle:
    Condition: do_not_use_parent_stack
    DependsOn: CreateSumoLogicAWSExplorerView
    Type: "AWS::CloudFormation::WaitConditionHandle"

  LambdaMetricWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !If [do_not_use_parent_stack, !Ref LambdaMetricWaitHandle, !Ref WaitHandle]
      Timeout: "5"
      Count: 0

  LambdaMetricRule:
    Type: Custom::SumoLogicMetricRules
    DependsOn: LambdaMetricWaitCondition
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoLogicHelperFunctionARN'
      RemoveOnDeleteStack: false
      MetricRuleName: "AwsObservabilityLambdaMetricsEntityRule"
      MatchExpression: !Sub "Namespace=AWS/Lambda FunctionName=*"
      ExtractVariables:
        entity: "$FunctionName._1"
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment

  LambdaFERWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !If [do_not_use_parent_stack, !Ref LambdaMetricWaitHandle, !Ref WaitHandle]
      Timeout: "15"
      Count: 0

  LambdaFieldExtractionRule:
    Type: Custom::SumoLogicFieldExtractionRule
    DependsOn: LambdaFERWaitCondition
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoLogicHelperFunctionARN'
      RemoveOnDeleteStack: false
      FieldExtractionRuleName: "AwsObservabilityFieldExtractionRule"
      FieldExtractionRuleScope: !Sub "(_sourceCategory=${CloudTrailLogsSourceCategoryName} \"eventSource\":\"lambda.amazonaws.com\")"
      FieldExtractionRuleParseExpression: "| json \"eventSource\" | where eventSource in (\"rds.amazonaws.com\", \"apigateway.amazonaws.com\", \"lambda.amazonaws.com\", \"dynamodb.amazonaws.com\") | if (eventSource matches \"rds.amazonaws.com\", \"aws/rds\", if (eventSource matches \"apigateway.amazonaws.com\",  \"aws/apigateway\", if (eventSource matches \"lambda.amazonaws.com\",  \"aws/lambda\", if (eventSource matches \"dynamodb.amazonaws.com\",  \"aws/dynamodb\", \"\")))) as Namespace"
      FieldExtractionRuleParseEnabled: true
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment

  SumoHostedCollector:
    Type: Custom::Collector
    Condition: install_collector
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      CollectorType: Hosted
      RemoveOnDeleteStack: !Ref RemoveSumoResourcesOnDeleteStack
      CollectorName: !Ref CollectorName
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment

  SumoCloudwatchMetricsSource:
    Condition: install_cloud_watch_metric_source
    Type: Custom::AWSSource
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      RemoveOnDeleteStack: !Ref RemoveSumoResourcesOnDeleteStack
      SourceType: AwsCloudWatch
      Namespaces:
        - 'AWS/Lambda'
      SourceName: !Ref CloudWatchMetricsSourceName
      SourceCategory: !Ref CloudWatchMetricsSourceCategoryName
      CollectorId: !If
        - install_collector
        - !GetAtt
          - SumoHostedCollector
          - COLLECTOR_ID
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-CollectorID'
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment
      RoleArn: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoRole
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoSourceRoleARN'

  sumoApp:
    Type: Custom::App
    Condition: install_app
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      AppName: "AWS Observability Lambda App"
      RemoveOnDeleteStack: !Ref RemoveSumoResourcesOnDeleteStack
      AppSources:
        metricssrc: !Sub "_sourceCategory=${CloudWatchMetricsSourceCategoryName}"
        logsrccw: !Sub "_sourceCategory=${CloudWatchLogsSourceCategoryName}"
        logsrcct: !Sub "_sourceCategory=${CloudTrailLogsSourceCategoryName}"
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment

  CloudWatchEventFunction:
    Type: AWS::CloudFormation::Stack
    Condition: install_cloud_watch_logs_source
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/appdev-cloudformation-templates/DLQLambdaCloudFormation.json"
      Parameters:
        SumoEndPointURL: !GetAtt SumoHTTPSource.SUMO_ENDPOINT
        IncludeLogGroupInfo: true

  SumoHTTPSource:
    Condition: install_cloud_watch_logs_source
    Type: Custom::HTTPSource
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      SourceName: !Ref CloudWatchLogsSourceName
      RemoveOnDeleteStack: !Ref RemoveSumoResourcesOnDeleteStack
      SourceCategory: !Ref CloudWatchLogsSourceCategoryName
      CollectorId: !If
        - install_collector
        - !GetAtt
          - SumoHostedCollector
          - COLLECTOR_ID
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-CollectorID'
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment
      DateFormat: "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
      DateLocatorRegex: '.*"updatedAt":"(.*)".*'
      Fields:
        account: !Ref AccountAlias
        namespace: "aws/lambda"
        region: !Ref "AWS::Region"

  SumoCloudTrailExportPolicy:
    Condition: create_target_s3_bucket
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CloudTrailLogsBucketName
      PolicyDocument:
        Statement:
          - Sid: AWSCloudTrailAclCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource:
              - !Sub "arn:aws:s3:::${CloudTrailLogsBucketName}"
          - Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource:
              - !Sub "arn:aws:s3:::${CloudTrailLogsBucketName}/*"
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
          - Sid: AWSBucketExistenceCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:ListBucket
            Resource:
              - !Sub "arn:aws:s3:::${CloudTrailLogsBucketName}"
    DependsOn:
      - TargetS3Bucket

  SumoCloudTrail:
    Condition: create_target_s3_bucket
    Type: Custom::AWSTrail
    DependsOn:
      - SumoCloudTrailExportPolicy
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoLogicHelperFunctionARN'
      IsLogging: true
      IsMultiRegionTrail: false
      S3BucketName: !Ref CloudTrailLogsBucketName
      TrailName: !Sub "Aws-Observability-${AccountAlias}"

  TargetS3Bucket:
    Condition: create_target_s3_bucket
    Type: AWS::S3::Bucket
    DependsOn:
      - SumoSNSpolicy
    Properties:
      BucketName: !Ref CloudTrailLogsBucketName
      NotificationConfiguration:
        TopicConfigurations:
          - Event: s3:ObjectCreated:Put
            Topic: !Ref SumoSNSTopic

  SumoSNSTopic:
    Condition: install_cloudtrail_logs_source
    Type: "AWS::SNS::Topic"
    Properties:
      TopicName: !Join
        - ""
        - - !Sub "sumo-sns-topic-${AccountAlias}-"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split ["/", !Ref "AWS::StackId"]

  SumoSNSSubscription:
    Condition: install_cloudtrail_logs_source
    Type: "AWS::SNS::Subscription"
    Properties:
      TopicArn:
        Ref: SumoSNSTopic
      Endpoint: !GetAtt SumoCloudTrailSource.SUMO_ENDPOINT
      Protocol: https
      DeliveryPolicy:
        healthyRetryPolicy:
          numRetries: 40
          minDelayTarget: 10
          maxDelayTarget: 300
          numMinDelayRetries: 3
          numMaxDelayRetries: 5
          numNoDelayRetries: 0
          backoffFunction: exponential

  SumoSNSpolicy:
    Condition: install_cloudtrail_logs_source
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      PolicyDocument:
        Id: SumoTopicPolicy
        Statement:
          - Action:
              - sns:Publish
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
              ArnLike:
                aws:SourceArn: !Sub "arn:aws:s3:::${CloudTrailLogsBucketName}"
            Effect: Allow
            Principal:
              AWS: "*"
            Resource:
              - !Ref SumoSNSTopic
      Topics:
        - Ref: SumoSNSTopic

  SumoCloudTrailSource:
    Condition: install_cloudtrail_logs_source
    Type: Custom::AWSSource
    Properties:
      SourceType: AwsCloudTrailBucket
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      SourceName: !Ref CloudTrailLogsSourceName
      TargetBucketName: !Ref CloudTrailLogsBucketName
      RemoveOnDeleteStack: !Ref RemoveSumoResourcesOnDeleteStack
      SourceCategory: !Ref CloudTrailLogsSourceCategoryName
      CollectorId: !If
        - install_collector
        - !GetAtt
          - SumoHostedCollector
          - COLLECTOR_ID
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-CollectorID'
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment
      PathExpression: !Ref CloudTrailBucketPathExpression
      Fields:
        account: !Ref AccountAlias
      RoleArn: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoRole
          - Arn
        - !ImportValue
          'Fn::Sub': '${ParentStackName}-SumoSourceRoleARN'